---
name: Deploy

on:
  workflow_dispatch:
  #   inputs:
  #     reason:
  #       required: true
  #       description: 'Reason for running this workflow'
  push:
    branches:
      - main

    # Don't trigger if it's just a documentation update
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '**.yml'
      - 'LICENSE'
      - '.gitattributes'
      - '.gitignore'
      - '.dockerignore'

jobs:

  # workflow-dispatch:
  #   name: Triggered via Workflow Dispatch?
  #   # only run this step if workflow dispatch triggered
  #   # log the reason the workflow dispatch was triggered
  #   if: |
  #     github.event_name == 'workflow_dispatch' &&
  #     github.event.inputs.reason != ''
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Log dispatch reason
  #       env:
  #         INPUTS_REASON: ${{ github.event.inputs.reason }}
  #       run: |
  #         echo "Workflow dispatch reason: $INPUTS_REASON"

#  deploy:
#    name: Deploy
#    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#      id-token: write
#    with:
#      push_enabled: true
#      push_destinations: ghcr.io
#      ghcr_repo_owner: ${{ github.repository_owner }}
#      ghcr_repo: ${{ github.repository }}
#      dockerhub_profile: planewatch
#      dockerhub_repo: plane-watch
#      dockerhub_username: mikenye
#    secrets:
#      ghcr_token: ${{ secrets.GITHUB_TOKEN }}
#      dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest tag from pw-feeder
        id: latest_tag
        run: |
          REPO_OWNER="plane-watch" # Replace with the owner of the other repo
          REPO_NAME="pw-feeder"   # Replace with the name of the other repo
          LATEST_RELEASE_TAG=$(curl -s "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases/latest" | jq -r .tag_name)
          echo "latest_tag_name=$LATEST_RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: false
          tags: ghcr.io/plane-watch/docker-plane-watch:latest,ghcr.io/plane-watch/docker-plane-watch:${{ steps.latest_tag.outputs.latest_tag_name }}
